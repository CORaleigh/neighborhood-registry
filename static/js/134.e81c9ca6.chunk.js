(this["webpackJsonpneighborhood-registry"]=this["webpackJsonpneighborhood-registry"]||[]).push([[134],{809:function(t,i,e){"use strict";e.d(i,"a",(function(){return m}));var s=e(0),a=(e(7),e(2)),h=e(6),r=(e(8),e(1)),c=e(3),o=(e(5),e(9),e(10),e(20)),n=e(54),l=e(22),p=e(14),b=e(4),d=e(158),g=e(367),v=e(457),u=e(17),y=e(119),_=e(463);const O=h.a.getLogger("esri.views.interactive.GraphicManipulator");let m=class extends o.a{constructor(t){super(t),this.layer=null,this.interactive=!0,this.selectable=!1,this.grabbable=!0,this.dragging=!1,this.cursor=null,this.events=new n.a.EventEmitter,this._circleCollisionCache=null,this._graphicSymbolChangedHandle=null,this._originalSymbol=null}set graphic(t){"mesh"!==Object(a.i)(t.geometry,"type")?(this._circleCollisionCache=null,this._originalSymbol=t.symbol,this._set("graphic",t),this.attachSymbolChanged()):O.error("Mesh geometries are not supported")}get elevationInfo(){const t="elevationInfo"in this.graphic.layer&&this.graphic.layer.elevationInfo,i=Object(y.e)(this.graphic),e=t?t.offset:0;return new g.a({mode:i,offset:e})}set focusedSymbol(t){t!==this._get("focusedSymbol")&&(this._set("focusedSymbol",t),this._updateGraphicSymbol(),this._circleCollisionCache=null)}grabbableForEvent(){return!0}set grabbing(t){t!==this._get("grabbing")&&(this._set("grabbing",t),this._updateGraphicSymbol())}set hovering(t){t!==this._get("hovering")&&(this._set("hovering",t),this._updateGraphicSymbol())}set selected(t){t!==this._get("selected")&&(this._set("selected",t),this._updateGraphicSymbol(),this.events.emit("select-changed",{action:t?"select":"deselect"}))}get _focused(){return this._get("hovering")||this._get("grabbing")}destroy(){this.detachSymbolChanged(),this._resetGraphicSymbol(),this._set("view",null)}intersectionDistance(t){const i=this.graphic;if(!1===i.visible)return null;const e=i.geometry;if(Object(a.j)(e))return null;const s=this._get("focusedSymbol"),h=Object(a.k)(s)?s:i.symbol;return"2d"===this.view.type?this._intersectDistance2D(this.view,t,e,h):this._intersectDistance3D(this.view,t,i)}attach(){this.attachSymbolChanged(),Object(a.k)(this.layer)&&this.layer.add(this.graphic)}detach(){this.detachSymbolChanged(),this._resetGraphicSymbol(),Object(a.k)(this.layer)&&this.layer.remove(this.graphic)}attachSymbolChanged(){this.detachSymbolChanged(),this._graphicSymbolChangedHandle=this.graphic.watch("symbol",(t=>{Object(a.k)(t)&&t!==this.focusedSymbol&&t!==this._originalSymbol&&(this._originalSymbol=t,this._focused&&Object(a.k)(this.focusedSymbol)&&(this.graphic.symbol=this.focusedSymbol))}),!0)}detachSymbolChanged(){Object(a.k)(this._graphicSymbolChangedHandle)&&(this._graphicSymbolChangedHandle.remove(),this._graphicSymbolChangedHandle=null)}_updateGraphicSymbol(){this.graphic.symbol=this._focused&&Object(a.k)(this.focusedSymbol)?this.focusedSymbol:this._originalSymbol}_resetGraphicSymbol(){this.graphic.symbol=this._originalSymbol}_intersectDistance2D(t,i,e,s){if(s=s||Object(v.e)(e),Object(a.j)(s))return null;let h=this._circleCollisionCache;if("point"!==e.type||"simple-marker"!==s.type)return Object(_.b)(i,e,t)?1:null;if(Object(a.j)(h)||!h.originalPoint.equals(e)){const i=e,a=t.spatialReference;if(Object(d.a)(i.spatialReference,a)){const t=Object(d.i)(i,a);h={originalPoint:i.clone(),mapPoint:t,radiusPx:Object(l.g)(s.size)},this._circleCollisionCache=h}}if(Object(a.k)(h)){const e=Object(l.i)(i,j),a=t.toScreen(h.mapPoint),r=h.radiusPx,c=a.x+Object(l.g)(s.xoffset),o=a.y-Object(l.g)(s.yoffset);return Object(u.j)(e,[c,o])<r*r?1:null}return null}_intersectDistance3D(t,i,e){const s=t.toMap(i,{include:[e]});return s&&Object(d.m)(s,G,t.renderSpatialReference)?Object(b.n)(G,t.state.camera.eye):null}};Object(s.a)([Object(r.b)({constructOnly:!0,nonNullable:!0})],m.prototype,"graphic",null),Object(s.a)([Object(r.b)({readOnly:!0})],m.prototype,"elevationInfo",null),Object(s.a)([Object(r.b)({constructOnly:!0,nonNullable:!0})],m.prototype,"view",void 0),Object(s.a)([Object(r.b)({value:null})],m.prototype,"focusedSymbol",null),Object(s.a)([Object(r.b)({constructOnly:!0})],m.prototype,"layer",void 0),Object(s.a)([Object(r.b)()],m.prototype,"interactive",void 0),Object(s.a)([Object(r.b)()],m.prototype,"selectable",void 0),Object(s.a)([Object(r.b)()],m.prototype,"grabbable",void 0),Object(s.a)([Object(r.b)({value:!1})],m.prototype,"grabbing",null),Object(s.a)([Object(r.b)()],m.prototype,"dragging",void 0),Object(s.a)([Object(r.b)()],m.prototype,"hovering",null),Object(s.a)([Object(r.b)({value:!1})],m.prototype,"selected",null),Object(s.a)([Object(r.b)()],m.prototype,"cursor",void 0),m=Object(s.a)([Object(c.a)("esri.views.interactive.GraphicManipulator")],m);const G=Object(p.e)(),j=Object(l.f)()},893:function(t,i,e){"use strict";e.r(i);var s=e(0),a=(e(7),e(13)),h=e(2),r=(e(6),e(8),e(1)),c=e(3),o=(e(5),e(9),e(10),e(54)),n=e(40),l=e(19),p=e(29),b=e(62),d=e(468),g=e(809);class v{constructor(t,i,e,s,a){this.graphic=t,this.index=i,this.x=e,this.y=s,this.viewEvent=a,this.type="graphic-click"}}class u{constructor(t,i,e,s,a){this.graphic=t,this.index=i,this.x=e,this.y=s,this.viewEvent=a,this.type="graphic-double-click"}}class y{constructor(t,i,e,s,a,h,r,c,o,n){this.graphic=t,this.allGraphics=i,this.index=e,this.x=s,this.y=a,this.dx=h,this.dy=r,this.totalDx=c,this.totalDy=o,this.viewEvent=n,this.defaultPrevented=!1,this.type="graphic-move-start"}preventDefault(){this.defaultPrevented=!0}}class _{constructor(t,i,e,s,a,h,r,c,o,n){this.graphic=t,this.allGraphics=i,this.index=e,this.x=s,this.y=a,this.dx=h,this.dy=r,this.totalDx=c,this.totalDy=o,this.viewEvent=n,this.defaultPrevented=!1,this.type="graphic-move"}preventDefault(){this.defaultPrevented=!0}}class O{constructor(t,i,e,s,a,h,r,c,o,n){this.graphic=t,this.allGraphics=i,this.index=e,this.x=s,this.y=a,this.dx=h,this.dy=r,this.totalDx=c,this.totalDy=o,this.viewEvent=n,this.defaultPrevented=!1,this.type="graphic-move-stop"}preventDefault(){this.defaultPrevented=!0}}class m{constructor(t,i,e,s,a){this.graphic=t,this.index=i,this.x=e,this.y=s,this.viewEvent=a,this.type="graphic-pointer-over"}}class G{constructor(t,i,e,s,a){this.graphic=t,this.index=i,this.x=e,this.y=s,this.viewEvent=a,this.type="graphic-pointer-out"}}class j{constructor(t,i,e,s,a){this.graphic=t,this.index=i,this.x=e,this.y=s,this.viewEvent=a,this.type="graphic-pointer-down"}}class f{constructor(t,i,e,s,a){this.graphic=t,this.index=i,this.x=e,this.y=s,this.viewEvent=a,this.type="graphic-pointer-up"}}let w=class extends o.a.EventedAccessor{constructor(t){super(t),this._activeGraphic=null,this._dragEvent=null,this._handles=new n.a,this._hoverGraphic=null,this._initialDragGeometry=null,this._viewHandles=new n.a,this._manipulators=[],this.type="graphic-mover",this.callbacks={onGraphicClick(){},onGraphicDoubleClick(){},onGraphicMoveStart(){},onGraphicMove(){},onGraphicMoveStop(){},onGraphicPointerOver(){},onGraphicPointerOut(){},onGraphicPointerDown(){},onGraphicPointerUp(){}},this.enableMoveAllGraphics=!1,this.graphics=[],this.view=null}initialize(){this._setUpManipulators(),this._handles.add([Object(l.d)(this,["graphics","graphics.length"],(()=>{this._setUpManipulators()})),Object(l.j)(this,"view.ready",(()=>{this._viewHandles.add([this.view.on("immediate-click",(t=>this._clickHandler(t)),p.b.TOOL),this.view.on("double-click",(t=>this._doubleClickHandler(t)),p.b.TOOL),this.view.on("pointer-down",(t=>this._pointerDownHandler(t)),p.b.TOOL),this.view.on("pointer-move",(t=>this._pointerMoveHandler(t)),p.b.TOOL),this.view.on("pointer-up",(t=>this._pointerUpHandler(t)),p.b.TOOL),this.view.on("drag",(t=>this._dragHandler(t)),p.b.TOOL),this.view.on("key-down",(t=>this._keyDownHandler(t)),p.b.TOOL)])}))])}destroy(){this.reset(),this._manipulators.forEach((t=>t.destroy())),this._manipulators=null,this._viewHandles.removeAll(),this._handles.removeAll()}get state(){const t=!!this.get("view.ready"),i=!!this.get("graphics.length"),e=this._activeGraphic;return t&&i?e?"moving":"active":t?"ready":"disabled"}reset(){this._activeGraphic=null,this._hoverGraphic=null,this._dragEvent=null}updateGeometry(t,i){const e=this.graphics[t];e&&e.set("geometry",i)}_clickHandler(t){const i=this._findTargetGraphic(Object(b.a)(t));if(i){const e=new v(i,this.graphics.indexOf(i),t.x,t.y,t);this.emit("graphic-click",e),this.callbacks.onGraphicClick&&this.callbacks.onGraphicClick(e)}}_doubleClickHandler(t){const i=this._findTargetGraphic(Object(b.a)(t));if(i){const e=new u(i,this.graphics.indexOf(i),t.x,t.y,t);this.emit("graphic-double-click",e),this.callbacks.onGraphicDoubleClick&&this.callbacks.onGraphicDoubleClick(e)}}_pointerDownHandler(t){const i=this._findTargetGraphic(Object(b.a)(t));if(i){this._activeGraphic=i;const{x:e,y:s}=t,a=new j(i,this.graphics.indexOf(i),e,s,t);this.emit("graphic-pointer-down",a),this.callbacks.onGraphicPointerDown&&this.callbacks.onGraphicPointerDown(a)}else this._activeGraphic=null}_pointerUpHandler(t){if(this._activeGraphic){const{x:i,y:e}=t,s=this.graphics.indexOf(this._activeGraphic),a=new f(this._activeGraphic,s,i,e,t);this.emit("graphic-pointer-up",a),this.callbacks.onGraphicPointerUp&&this.callbacks.onGraphicPointerUp(a)}}_pointerMoveHandler(t){if(this._dragEvent)return;const i=this._findTargetGraphic(Object(b.a)(t));if(i){const{x:e,y:s}=t;if(this._hoverGraphic){if(this._hoverGraphic===i)return;const a=this.graphics.indexOf(this._hoverGraphic),h=new G(this.graphics[a],a,e,s,t);this._hoverGraphic=null,this.emit("graphic-pointer-out",h),this.callbacks.onGraphicPointerOut&&this.callbacks.onGraphicPointerOut(h)}const a=this.graphics.indexOf(i),h=new m(i,a,e,s,t);return this._hoverGraphic=i,this.emit("graphic-pointer-over",h),void(this.callbacks.onGraphicPointerOver&&this.callbacks.onGraphicPointerOver(h))}if(this._hoverGraphic){const{x:i,y:e}=t,s=this.graphics.indexOf(this._hoverGraphic),a=new G(this.graphics[s],s,i,e,t);this._hoverGraphic=null,this.emit("graphic-pointer-out",a),this.callbacks.onGraphicPointerOut&&this.callbacks.onGraphicPointerOut(a)}}_dragHandler(t){if("start"!==t.action&&!this._dragEvent||!this._activeGraphic||!this._activeGraphic.geometry)return;t.stopPropagation();const{action:i,x:e,y:s}=t,h=this.graphics.indexOf(this._activeGraphic),r=this._activeGraphic.geometry,c=this._dragEvent?e-this._dragEvent.x:0,o=this._dragEvent?s-this._dragEvent.y:0,n=e-t.origin.x,l=s-t.origin.y;if(this._activeGraphic.geometry=Object(d.a)(r,c,o,this.view),this.enableMoveAllGraphics&&this.graphics.forEach((t=>{t!==this._activeGraphic&&(t.geometry=Object(d.a)(t.geometry,c,o,this.view))})),this._dragEvent=t,"start"===i){this._initialDragGeometry=Object(a.a)(r);const i=new y(this._activeGraphic,this.graphics,h,e,s,c,o,n,l,t);this.emit("graphic-move-start",i),this.callbacks.onGraphicMoveStart&&this.callbacks.onGraphicMoveStart(i),i.defaultPrevented&&this._activeGraphic.set("geometry",r)}else if("update"===i){const i=new _(this._activeGraphic,this.graphics,h,e,s,c,o,n,l,t);this.emit("graphic-move",i),this.callbacks.onGraphicMove&&this.callbacks.onGraphicMove(i),i.defaultPrevented&&this._activeGraphic.set("geometry",r)}else{const i=new O(this._activeGraphic,this.graphics,h,e,s,c,o,n,l,t);this._dragEvent=null,this._activeGraphic=null,this.emit("graphic-move-stop",i),this.callbacks.onGraphicMoveStop&&this.callbacks.onGraphicMoveStop(i),i.defaultPrevented&&this.graphics[h].set("geometry",this._initialDragGeometry),this._initialDragGeometry=null}}_keyDownHandler(t){"a"!==t.key&&"d"!==t.key&&"n"!==t.key||"moving"!==this.state||t.stopPropagation()}_findTargetGraphic(t){let i=null,e=Number.MAX_VALUE;return this._manipulators.forEach((s=>{const a=s.intersectionDistance(t);Object(h.k)(a)&&a<e&&(e=a,i=s.graphic)})),i}_setUpManipulators(){const{graphics:t,view:i}=this;this._manipulators.forEach((t=>t.destroy())),this._manipulators=null!=t&&t.length?t.map((t=>new g.a({graphic:t,view:i}))):[]}};Object(s.a)([Object(r.b)()],w.prototype,"_activeGraphic",void 0),Object(s.a)([Object(r.b)({readOnly:!0})],w.prototype,"type",void 0),Object(s.a)([Object(r.b)()],w.prototype,"callbacks",void 0),Object(s.a)([Object(r.b)()],w.prototype,"enableMoveAllGraphics",void 0),Object(s.a)([Object(r.b)()],w.prototype,"graphics",void 0),Object(s.a)([Object(r.b)({readOnly:!0})],w.prototype,"state",null),Object(s.a)([Object(r.b)()],w.prototype,"view",void 0),w=Object(s.a)([Object(c.a)("esri.views.draw.support.GraphicMover")],w);var k=w;i.default=k}}]);
//# sourceMappingURL=134.e81c9ca6.chunk.js.map