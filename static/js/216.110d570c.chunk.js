(this["webpackJsonpneighborhood-registry"]=this["webpackJsonpneighborhood-registry"]||[]).push([[216],{1126:function(e,t,a){"use strict";a.r(t);var r=a(0),i=(a(7),a(6),a(8),a(1)),s=a(3),l=(a(5),a(9),a(10),a(11)),c=a(41);const o=e=>{let t=class extends e{initialize(){const{layer:e,view:t}=this;e.source.supportsSpatialReference(t.spatialReference)||this.addResolvingPromise(Promise.reject(new l.a("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return Object(c.k)(this.layer.fields,["*"])}};return Object(r.a)([Object(i.b)()],t.prototype,"layer",void 0),Object(r.a)([Object(i.b)({readOnly:!0})],t.prototype,"availableFields",null),t=Object(r.a)([Object(s.a)("esri.views.layers.OGCFeatureLayerView")],t),t};var n=a(996);let b=class extends(o(n.default)){};b=Object(r.a)([Object(s.a)("esri.views.2d.layers.OGCFeatureLayerView2D")],b);var p=b;t.default=p}}]);
//# sourceMappingURL=216.110d570c.chunk.js.map